@using TwoGirls.Core.DTOs;
@model PaginationViewModel
@{
    Layout = null;
}
@if (Model != null && Model.PageCount >= 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center mt-3">
            <li class="page-item @((Model.CurrentPage == 1) ? "disabled" : "")">
                <label class="page-link Pointer">
                    <input type="radio" name="pageId" value="@(Model.CurrentPage - 1)" aria-disabled="@(Model.CurrentPage == 1 ? "true" : "false")" class="filter-control btn-check" autocomplete="off"> Previous
                </label>
            </li>
            @for (int j = 1; j <= Model.PageCount; j++)
            {

                <li class="page-item @((j == Model.CurrentPage) ? "active" : "")">
                    <label class="page-link Pointer">
                        <input type="radio" name="pageId" value="@j" id="opt@(j)" class="filter-control btn-check" autocomplete="off"> @j
                    </label>
                </li>
            }
            <li class="page-item @((Model.CurrentPage == Model.PageCount) ? "disabled" : "")">
            <label class="page-link Pointer">
                <input type="radio" name="pageId" value="@(Model.CurrentPage + 1)" aria-disabled="@(Model.CurrentPage == Model.PageCount ? "true" : "false")" class="filter-control btn-check" autocomplete="off"> Next
            </label>
        </li>
    </ul>
</nav>
}