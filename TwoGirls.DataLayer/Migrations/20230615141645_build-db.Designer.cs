// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwoGirls.DataLayer.Context;

#nullable disable

namespace TwoGirls.DataLayer.Migrations
{
    [DbContext(typeof(TwogirsContext))]
    [Migration("20230615141645_build-db")]
    partial class builddb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuildingNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClose")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClose = false,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CartId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            CartId = 1,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            CartId = 1,
                            ProductId = 3,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Men's"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Women's"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Featured Categories"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "New Collection",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Most Visited",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Best Sellers",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Discounted",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "New Collection",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Most Visited",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Best Sellers",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Discounted",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "Fashion and Trends",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "Designer Outlet",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "Sports Glasses",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Name = "Glasses for Couples",
                            ParentId = 3
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CategoryToProduct", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryToProducts");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 9,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 10,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 12,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 9,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 10,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 12
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.DiscountCode", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<DateTime>("EendDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UseableCount")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.ToTable("DiscountCodes");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Favorite", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.ImagePath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ImagePaths");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "v1.webp",
                            ProductId = 1,
                            Url = "/image/sunglasses/v1.webp"
                        },
                        new
                        {
                            Id = 2,
                            Name = "v2.webp",
                            ProductId = 1,
                            Url = "/image/sunglasses/v2.webp"
                        },
                        new
                        {
                            Id = 3,
                            Name = "a1.webp",
                            ProductId = 2,
                            Url = "/image/sunglasses/a1.webp"
                        },
                        new
                        {
                            Id = 4,
                            Name = "a2.webp",
                            ProductId = 2,
                            Url = "/image/sunglasses/a2.webp"
                        },
                        new
                        {
                            Id = 5,
                            Name = "b1.webp",
                            ProductId = 3,
                            Url = "/image/sunglasses/b1.webp"
                        },
                        new
                        {
                            Id = 6,
                            Name = "b2.webp",
                            ProductId = 3,
                            Url = "/image/sunglasses/b2.webp"
                        },
                        new
                        {
                            Id = 7,
                            Name = "c1.webp",
                            ProductId = 4,
                            Url = "/image/sunglasses/c1.webp"
                        },
                        new
                        {
                            Id = 8,
                            Name = "c2.webp",
                            ProductId = 4,
                            Url = "/image/sunglasses/c2.webp"
                        },
                        new
                        {
                            Id = 9,
                            Name = "e1.webp",
                            ProductId = 5,
                            Url = "/image/sunglasses/e1.webp"
                        },
                        new
                        {
                            Id = 10,
                            Name = "e2.webp",
                            ProductId = 5,
                            Url = "/image/sunglasses/e2.webp"
                        },
                        new
                        {
                            Id = 11,
                            Name = "f1.webp",
                            ProductId = 6,
                            Url = "/image/sunglasses/f1.webp"
                        },
                        new
                        {
                            Id = 12,
                            Name = "f2.webp",
                            ProductId = 6,
                            Url = "/image/sunglasses/f2.webp"
                        },
                        new
                        {
                            Id = 13,
                            Name = "g1.webp",
                            ProductId = 7,
                            Url = "/image/sunglasses/g1.webp"
                        },
                        new
                        {
                            Id = 14,
                            Name = "g2.webp",
                            ProductId = 7,
                            Url = "/image/sunglasses/g2.webp"
                        },
                        new
                        {
                            Id = 15,
                            Name = "s1.webp",
                            ProductId = 8,
                            Url = "/image/sunglasses/s1.webp"
                        },
                        new
                        {
                            Id = 16,
                            Name = "s2.webp",
                            ProductId = 8,
                            Url = "/image/sunglasses/s2.webp"
                        },
                        new
                        {
                            Id = 17,
                            Name = "h1.webp",
                            ProductId = 9,
                            Url = "/image/sunglasses/h1.webp"
                        },
                        new
                        {
                            Id = 18,
                            Name = "h2.webp",
                            ProductId = 9,
                            Url = "/image/sunglasses/h2.webp"
                        },
                        new
                        {
                            Id = 19,
                            Name = "w1.webp",
                            ProductId = 10,
                            Url = "/image/sunglasses/w1.webp"
                        },
                        new
                        {
                            Id = 20,
                            Name = "w2.webp",
                            ProductId = 10,
                            Url = "/image/sunglasses/w2.webp"
                        },
                        new
                        {
                            Id = 21,
                            Name = "r1.webp",
                            ProductId = 11,
                            Url = "/image/sunglasses/r1.webp"
                        },
                        new
                        {
                            Id = 22,
                            Name = "r2.webp",
                            ProductId = 11,
                            Url = "/image/sunglasses/r2.webp"
                        },
                        new
                        {
                            Id = 23,
                            Name = "q1.webp",
                            ProductId = 12,
                            Url = "/image/sunglasses/q1.webp"
                        },
                        new
                        {
                            Id = 24,
                            Name = "q2.webp",
                            ProductId = 12,
                            Url = "/image/sunglasses/q2.webp"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("CartId1")
                        .HasColumnType("int");

                    b.Property<int>("DiscountPercent")
                        .HasColumnType("int");

                    b.Property<bool>("IsFinally")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("AddressId");

                    b.HasIndex("CartId");

                    b.HasIndex("CartId1")
                        .IsUnique()
                        .HasFilter("[CartId1] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Admin Panel"
                        },
                        new
                        {
                            Id = 2,
                            ParentId = 1,
                            Title = "Manage Users"
                        },
                        new
                        {
                            Id = 3,
                            ParentId = 1,
                            Title = "Manage Permissions"
                        },
                        new
                        {
                            Id = 4,
                            ParentId = 1,
                            Title = "Manage Products"
                        },
                        new
                        {
                            Id = 5,
                            ParentId = 1,
                            Title = "Manage Orders"
                        },
                        new
                        {
                            Id = 6,
                            ParentId = 2,
                            Title = "Add or Edit"
                        },
                        new
                        {
                            Id = 7,
                            ParentId = 2,
                            Title = "Delete"
                        },
                        new
                        {
                            Id = 8,
                            ParentId = 2,
                            Title = "Recover"
                        },
                        new
                        {
                            Id = 9,
                            ParentId = 2,
                            Title = "Watch the list"
                        },
                        new
                        {
                            Id = 10,
                            ParentId = 3,
                            Title = "Add or Edit"
                        },
                        new
                        {
                            Id = 11,
                            ParentId = 3,
                            Title = "Delete"
                        },
                        new
                        {
                            Id = 12,
                            ParentId = 3,
                            Title = "Recover"
                        },
                        new
                        {
                            Id = 13,
                            ParentId = 3,
                            Title = "Watch the list"
                        },
                        new
                        {
                            Id = 14,
                            ParentId = 4,
                            Title = "Add"
                        },
                        new
                        {
                            Id = 15,
                            ParentId = 4,
                            Title = "Edit"
                        },
                        new
                        {
                            Id = 16,
                            ParentId = 4,
                            Title = "Delete"
                        },
                        new
                        {
                            Id = 17,
                            ParentId = 4,
                            Title = "Recover"
                        },
                        new
                        {
                            Id = 18,
                            ParentId = 4,
                            Title = "Watch the list"
                        },
                        new
                        {
                            Id = 19,
                            ParentId = 5,
                            Title = "Send"
                        },
                        new
                        {
                            Id = 20,
                            ParentId = 5,
                            Title = "Unsend"
                        },
                        new
                        {
                            Id = 21,
                            ParentId = 5,
                            Title = "Watch the list"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("ItemNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            DiscountedPrice = 1136m,
                            IsDelete = false,
                            ItemNumber = 87579,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 5, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6627),
                            PurchasePrice = 1463m,
                            QuantityInStock = 14,
                            ReleaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6621),
                            SalesPrice = 1114m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            DiscountedPrice = 1364m,
                            IsDelete = false,
                            ItemNumber = 37474,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6645),
                            PurchasePrice = 1264m,
                            QuantityInStock = 10,
                            ReleaseDate = new DateTime(2023, 4, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6631),
                            SalesPrice = 1021m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            DiscountedPrice = 1062m,
                            IsDelete = false,
                            ItemNumber = 74955,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 5, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6661),
                            PurchasePrice = 1186m,
                            QuantityInStock = 19,
                            ReleaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6654),
                            SalesPrice = 1451m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            DiscountedPrice = 1082m,
                            IsDelete = false,
                            ItemNumber = 55424,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 5, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6668),
                            PurchasePrice = 1359m,
                            QuantityInStock = 33,
                            ReleaseDate = new DateTime(2023, 4, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6664),
                            SalesPrice = 1410m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            DiscountedPrice = 1145m,
                            IsDelete = false,
                            ItemNumber = 51616,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 5, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6689),
                            PurchasePrice = 1015m,
                            QuantityInStock = 19,
                            ReleaseDate = new DateTime(2023, 4, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6685),
                            SalesPrice = 1044m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            DiscountedPrice = 1419m,
                            IsDelete = false,
                            ItemNumber = 73793,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 4, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6697),
                            PurchasePrice = 1404m,
                            QuantityInStock = 28,
                            ReleaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6693),
                            SalesPrice = 1117m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            DiscountedPrice = 1174m,
                            IsDelete = false,
                            ItemNumber = 84365,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6726),
                            PurchasePrice = 1367m,
                            QuantityInStock = 10,
                            ReleaseDate = new DateTime(2023, 4, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6700),
                            SalesPrice = 1438m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            DiscountedPrice = 1326m,
                            IsDelete = false,
                            ItemNumber = 48811,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6734),
                            PurchasePrice = 1433m,
                            QuantityInStock = 14,
                            ReleaseDate = new DateTime(2023, 4, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6730),
                            SalesPrice = 1076m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            DiscountedPrice = 1211m,
                            IsDelete = false,
                            ItemNumber = 79581,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6741),
                            PurchasePrice = 1382m,
                            QuantityInStock = 35,
                            ReleaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6738),
                            SalesPrice = 1133m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            DiscountedPrice = 1399m,
                            IsDelete = false,
                            ItemNumber = 71930,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 5, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6754),
                            PurchasePrice = 1333m,
                            QuantityInStock = 47,
                            ReleaseDate = new DateTime(2023, 5, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6745),
                            SalesPrice = 1424m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            DiscountedPrice = 1103m,
                            IsDelete = false,
                            ItemNumber = 34250,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 5, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6763),
                            PurchasePrice = 1021m,
                            QuantityInStock = 14,
                            ReleaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6758),
                            SalesPrice = 1453m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            DiscountedPrice = 1304m,
                            IsDelete = false,
                            ItemNumber = 72321,
                            ProductTypeId = 1,
                            PurchaseDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6771),
                            PurchasePrice = 1161m,
                            QuantityInStock = 16,
                            ReleaseDate = new DateTime(2023, 4, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6767),
                            SalesPrice = 1195m,
                            Title = "Reyban Genwux 941"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("productTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Sunglasses"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Eyeglasses"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            Date = new DateTime(2023, 5, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6871),
                            ProductId = 1,
                            Rate = 1.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            Date = new DateTime(2023, 5, 20, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6882),
                            ProductId = 2,
                            Rate = 2.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            Date = new DateTime(2023, 5, 17, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6886),
                            ProductId = 5,
                            Rate = 3.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            Date = new DateTime(2023, 5, 7, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6891),
                            ProductId = 6,
                            Rate = 2.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            Date = new DateTime(2023, 5, 7, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6926),
                            ProductId = 2,
                            Rate = 5.0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            Date = new DateTime(2023, 5, 11, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6930),
                            ProductId = 1,
                            Rate = 3.0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            IsDelete = false,
                            RoleTitle = "Owner"
                        },
                        new
                        {
                            RoleId = 2,
                            IsDelete = false,
                            RoleTitle = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            IsDelete = false,
                            RoleTitle = "Staff"
                        },
                        new
                        {
                            RoleId = 4,
                            IsDelete = false,
                            RoleTitle = "User"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Finaly")
                        .HasColumnType("bit");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Deposit"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Withdraw"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveCode = "50975f6e0555441db20afedb3fd1e02f",
                            Email = "aqamiladam@gmail.com",
                            FirstName = "Milad",
                            ImagePath = "/image/user-avatar/Milad_profile.jpg",
                            IsActive = true,
                            IsDelete = false,
                            LastName = "Khalatbari",
                            Password = "$HASH$V1$jhUAa6x2XLTQSttEBvsxYw==$Ib1JCvml1e9BLlaqTxYe+ugz3qHe/aig6ks9sNge0lk=",
                            PhoneNumber = "+420730834642",
                            RegisterDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6538),
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActiveCode = "90e2b14b48cc40deafcd275d96c50b94",
                            Email = "samanafra@gmail.com",
                            FirstName = "saman",
                            ImagePath = "/image/user-avatar/saman_profile.jpg",
                            IsActive = true,
                            IsDelete = false,
                            LastName = "afrasiabi",
                            Password = "$HASH$V1$jhUAa6x2XLTQSttEBvsxYw==$Ib1JCvml1e9BLlaqTxYe+ugz3qHe/aig6ks9sNge0lk=",
                            PhoneNumber = "+0985858585",
                            RegisterDate = new DateTime(2023, 6, 15, 16, 16, 43, 430, DateTimeKind.Local).AddTicks(6587),
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.UserDiscountCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDiscountCodes");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Address", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Cart", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CartItem", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("CardItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CategoryToProduct", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Category", "Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("categoryToProdycts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CreditCard", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("CreditCards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Favorite", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "Users")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.ImagePath", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("ImagePaths")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Order", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Address", "Address")
                        .WithMany("Orders")
                        .HasForeignKey("AddressId");

                    b.HasOne("TwoGirls.DataLayer.Entities.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.Cart", null)
                        .WithOne("Order")
                        .HasForeignKey("TwoGirls.DataLayer.Entities.Order", "CartId1");

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", null)
                        .WithMany("Orders")
                        .HasForeignKey("UserId1");

                    b.Navigation("Address");

                    b.Navigation("Cart");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Permission", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Permission", null)
                        .WithMany("Permissions")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Product", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.ProductType", "ProductType")
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Review", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.RolePermission", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Transaction", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.User", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Role", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.UserDiscountCodes", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.DiscountCode", "DiscountCode")
                        .WithMany("UserDiscountCodes")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("UserDiscountCodes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountCode");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Address", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Category", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.DiscountCode", b =>
                {
                    b.Navigation("UserDiscountCodes");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Permission", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Product", b =>
                {
                    b.Navigation("CardItems");

                    b.Navigation("Favorites");

                    b.Navigation("ImagePaths");

                    b.Navigation("Reviews");

                    b.Navigation("categoryToProdycts");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.ProductType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cards");

                    b.Navigation("CreditCards");

                    b.Navigation("Favorites");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Transactions");

                    b.Navigation("UserDiscountCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
