// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TwoGirls.DataLayer.Context;

#nullable disable

namespace TwoGirls.DataLayer.Migrations
{
    [DbContext(typeof(TwogirsContext))]
    [Migration("20230505093402_first-mig-build-db")]
    partial class firstmigbuilddb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuildingNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClose")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClose = false,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ProductId");

                    b.ToTable("CardItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            CardId = 1,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            CardId = 1,
                            ProductId = 3,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Name = "favorite"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Men's"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Women's"
                        },
                        new
                        {
                            Id = 3,
                            Name = "New Collection"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Designer Outlet"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fashion and Trends"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sports Glasses"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Best Sellers"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Most Visited"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fashion and Trends"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Glasses for Couples"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Discounted"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CategoryToProduct", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryToProducts");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 9,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 10,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 12,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 9,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 10,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 12
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVV")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Favorite", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.ImagePath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ImagePaths");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "v1.webp",
                            ProductId = 1,
                            Url = "/image/sunglasses/v1.webp"
                        },
                        new
                        {
                            Id = 2,
                            Name = "v2.webp",
                            ProductId = 1,
                            Url = "/image/sunglasses/v2.webp"
                        },
                        new
                        {
                            Id = 3,
                            Name = "a1.webp",
                            ProductId = 2,
                            Url = "/image/sunglasses/a1.webp"
                        },
                        new
                        {
                            Id = 4,
                            Name = "a2.webp",
                            ProductId = 2,
                            Url = "/image/sunglasses/a2.webp"
                        },
                        new
                        {
                            Id = 5,
                            Name = "b1.webp",
                            ProductId = 3,
                            Url = "/image/sunglasses/b1.webp"
                        },
                        new
                        {
                            Id = 6,
                            Name = "b2.webp",
                            ProductId = 3,
                            Url = "/image/sunglasses/b2.webp"
                        },
                        new
                        {
                            Id = 7,
                            Name = "c1.webp",
                            ProductId = 4,
                            Url = "/image/sunglasses/c1.webp"
                        },
                        new
                        {
                            Id = 8,
                            Name = "c2.webp",
                            ProductId = 4,
                            Url = "/image/sunglasses/c2.webp"
                        },
                        new
                        {
                            Id = 9,
                            Name = "e1.webp",
                            ProductId = 5,
                            Url = "/image/sunglasses/e1.webp"
                        },
                        new
                        {
                            Id = 10,
                            Name = "e2.webp",
                            ProductId = 5,
                            Url = "/image/sunglasses/e2.webp"
                        },
                        new
                        {
                            Id = 11,
                            Name = "f1.webp",
                            ProductId = 6,
                            Url = "/image/sunglasses/f1.webp"
                        },
                        new
                        {
                            Id = 12,
                            Name = "f2.webp",
                            ProductId = 6,
                            Url = "/image/sunglasses/f2.webp"
                        },
                        new
                        {
                            Id = 13,
                            Name = "g1.webp",
                            ProductId = 7,
                            Url = "/image/sunglasses/g1.webp"
                        },
                        new
                        {
                            Id = 14,
                            Name = "g2.webp",
                            ProductId = 7,
                            Url = "/image/sunglasses/g2.webp"
                        },
                        new
                        {
                            Id = 15,
                            Name = "s1.webp",
                            ProductId = 8,
                            Url = "/image/sunglasses/s1.webp"
                        },
                        new
                        {
                            Id = 16,
                            Name = "s2.webp",
                            ProductId = 8,
                            Url = "/image/sunglasses/s2.webp"
                        },
                        new
                        {
                            Id = 17,
                            Name = "h1.webp",
                            ProductId = 9,
                            Url = "/image/sunglasses/h1.webp"
                        },
                        new
                        {
                            Id = 18,
                            Name = "h2.webp",
                            ProductId = 9,
                            Url = "/image/sunglasses/h2.webp"
                        },
                        new
                        {
                            Id = 19,
                            Name = "w1.webp",
                            ProductId = 10,
                            Url = "/image/sunglasses/w1.webp"
                        },
                        new
                        {
                            Id = 20,
                            Name = "w2.webp",
                            ProductId = 10,
                            Url = "/image/sunglasses/w2.webp"
                        },
                        new
                        {
                            Id = 21,
                            Name = "r1.webp",
                            ProductId = 11,
                            Url = "/image/sunglasses/r1.webp"
                        },
                        new
                        {
                            Id = 22,
                            Name = "r2.webp",
                            ProductId = 11,
                            Url = "/image/sunglasses/r2.webp"
                        },
                        new
                        {
                            Id = 23,
                            Name = "q1.webp",
                            ProductId = 12,
                            Url = "/image/sunglasses/q1.webp"
                        },
                        new
                        {
                            Id = 24,
                            Name = "q2.webp",
                            ProductId = 12,
                            Url = "/image/sunglasses/q2.webp"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalesPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            DiscountedPrice = 1166m,
                            PurchaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7737),
                            PurchasePrice = 1228m,
                            QuantityInStock = 33,
                            ReleaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7732),
                            SalesPrice = 1296m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            DiscountedPrice = 1121m,
                            PurchaseDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7745),
                            PurchasePrice = 1483m,
                            QuantityInStock = 18,
                            ReleaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7741),
                            SalesPrice = 1139m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            DiscountedPrice = 1215m,
                            PurchaseDate = new DateTime(2023, 3, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7751),
                            PurchasePrice = 1146m,
                            QuantityInStock = 21,
                            ReleaseDate = new DateTime(2023, 3, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7748),
                            SalesPrice = 1068m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            DiscountedPrice = 1081m,
                            PurchaseDate = new DateTime(2023, 3, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7758),
                            PurchasePrice = 1049m,
                            QuantityInStock = 23,
                            ReleaseDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7754),
                            SalesPrice = 1109m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            DiscountedPrice = 1409m,
                            PurchaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7765),
                            PurchasePrice = 1155m,
                            QuantityInStock = 21,
                            ReleaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7761),
                            SalesPrice = 1010m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            DiscountedPrice = 1357m,
                            PurchaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7771),
                            PurchasePrice = 1452m,
                            QuantityInStock = 44,
                            ReleaseDate = new DateTime(2023, 3, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7768),
                            SalesPrice = 1217m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            DiscountedPrice = 1251m,
                            PurchaseDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7779),
                            PurchasePrice = 1281m,
                            QuantityInStock = 40,
                            ReleaseDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7775),
                            SalesPrice = 1309m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            DiscountedPrice = 1381m,
                            PurchaseDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7785),
                            PurchasePrice = 1203m,
                            QuantityInStock = 28,
                            ReleaseDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7782),
                            SalesPrice = 1207m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            DiscountedPrice = 1310m,
                            PurchaseDate = new DateTime(2023, 3, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7792),
                            PurchasePrice = 1284m,
                            QuantityInStock = 47,
                            ReleaseDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7789),
                            SalesPrice = 1035m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            DiscountedPrice = 1189m,
                            PurchaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7799),
                            PurchasePrice = 1238m,
                            QuantityInStock = 35,
                            ReleaseDate = new DateTime(2023, 3, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7796),
                            SalesPrice = 1108m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            DiscountedPrice = 1413m,
                            PurchaseDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7806),
                            PurchasePrice = 1424m,
                            QuantityInStock = 26,
                            ReleaseDate = new DateTime(2023, 3, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7802),
                            SalesPrice = 1046m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            DiscountedPrice = 1240m,
                            PurchaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7812),
                            PurchasePrice = 1245m,
                            QuantityInStock = 12,
                            ReleaseDate = new DateTime(2023, 4, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7809),
                            SalesPrice = 1397m,
                            Title = "Reyban Genwux 941"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 1,
                            Rate = 1.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 2,
                            Rate = 2.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 5,
                            Rate = 3.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 6,
                            Rate = 2.0,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 2,
                            Rate = 5.0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 1,
                            Rate = 3.0,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<int?>("RoleId1")
                        .HasColumnType("int");

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleId1");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleTitle = "Leader"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Finaly")
                        .HasColumnType("bit");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Deposit"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Withdraw"
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveCode = "50975f6e0555441db20afedb3fd1e02f",
                            Email = "aqamiladam@gmail.com",
                            FirstName = "Milad",
                            ImagePath = "/image/user-avatar/Milad_profile.jpg",
                            IsActive = true,
                            LastName = "Khalatbari",
                            Password = "$HASH$V1$jhUAa6x2XLTQSttEBvsxYw==$Ib1JCvml1e9BLlaqTxYe+ugz3qHe/aig6ks9sNge0lk=",
                            PhoneNumber = "+420730834642",
                            RegisterDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7637)
                        },
                        new
                        {
                            Id = 2,
                            ActiveCode = "90e2b14b48cc40deafcd275d96c50b94",
                            Email = "samanafra@gmail.com",
                            FirstName = "saman",
                            ImagePath = "/image/user-avatar/saman_profile.jpg",
                            IsActive = true,
                            LastName = "afrasiabi",
                            Password = "$HASH$V1$jhUAa6x2XLTQSttEBvsxYw==$Ib1JCvml1e9BLlaqTxYe+ugz3qHe/aig6ks9sNge0lk=",
                            PhoneNumber = "+0985858585",
                            RegisterDate = new DateTime(2023, 5, 5, 11, 34, 2, 405, DateTimeKind.Local).AddTicks(7677)
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Address", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Card", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CardItem", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Card", "Card")
                        .WithMany("CardItems")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("CardItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CategoryToProduct", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Category", "Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("categoryToProdycts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.CreditCard", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("CreditCards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Favorite", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "Users")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.ImagePath", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("ImagePaths")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Review", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", null)
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Role", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Role", null)
                        .WithMany("Roles")
                        .HasForeignKey("RoleId1");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Transaction", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransactionType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.UserRole", b =>
                {
                    b.HasOne("TwoGirls.DataLayer.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TwoGirls.DataLayer.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Card", b =>
                {
                    b.Navigation("CardItems");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Category", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Product", b =>
                {
                    b.Navigation("CardItems");

                    b.Navigation("Favorites");

                    b.Navigation("ImagePaths");

                    b.Navigation("Reviews");

                    b.Navigation("categoryToProdycts");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.Role", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("TwoGirls.DataLayer.Entities.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cards");

                    b.Navigation("CreditCards");

                    b.Navigation("Favorites");

                    b.Navigation("Reviews");

                    b.Navigation("Transactions");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
