@using TwoGirls.DataLayer.Entities;
@model Product;

@section style{
    <link rel="stylesheet" href="~/css/Detail-Page-Style.css" asp-append-version="true">
}
@{
    Guid guid = Guid.NewGuid();
    double roundedRate = Math.Round(Model.Rate() * 2) / 2;
    var favorites = ViewData["Favorites"] as List<Favorite>;
}
<img src="~/image/Detail-Banner.jpg" alt="" class="page-header" />
<section id="product-detail" class="container-lg mt-1">
    <div class="row">
        <div class="col-md-6 col-lg-5 gallery mt-3">
            <div class="detail-product-card align-middle">
                <img src="@Model.ImagePaths.First().Url" alt="@Model.Title" class="detail-product-card-img" id="myimage">
                <div class="gallery__data">
                </div>
            </div>
            <!-- Gallery overflow -->
            <div id="detail-product-slider" class="overflow-hidden wrapper position-relative">
                <div class="overflow-hidden custom-carousel flex-nowrap row m-0 ">
                    @foreach (var img in Model.ImagePaths)
                    {
                        <div class="card custom-carousel-item">
                            <div class="gallery__thumbnail">
                                <img src="@img.Url" alt="@img.Name" onclick="ChangePicture('@img.Url')">
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div id="detail-product-info" class="col-md-6 col-lg-7 d-flex flex-column justify-content-between">
            <div>
                <div>
                    <p>
                        <span class="alert alert-danger p-1 my-1 d-none">This product is no longer in stock</span>
                    </p>
                    <p>
                        <span class="alert alert-info p-1 my-1 d-none">10 Items is avalible</span>
                    </p>
                    <p> <span class="alert alert-warning p-1 my-1 d-none"> its Last items in stock!</span></p>
                </div>
                <p class="m-0">
                    Item number:<span>@Model.ItemNumber</span> 
                    @{
                        if (favorites != null)
                        {
                            <i onclick="AddFavorite(@Model.Id)" class="favoriteIc fa-heart text-warning @(favorites.Any(x => x.ProductId == Model.Id) ? "fa-solid" :"fa-regular" )"></i>
                        }
                        else
                        {
                            <i onclick="AddFavorite(@Model.Id)" class="favoriteIco fa-heart text-warning fa-regular "></i>

                        }
                    }
                </p>

                <p class="h1 fw-bold">@Model.Title</p>


                <div class="d-flex justify-content-start align-items-end">
                    <div class="rate d-inline-flex flex-nowrap align-items-start justify-content-start">
                        @for (double rating = 5; rating >= 0.5; rating -= 0.5)
                        {
                            <input onclick="ShowInPopup('@Url.Action("AddReview", "Product", new { productId = Model.Id }, Context.Request.Scheme)', @rating)"
                                   type="radio" name="@guid" value="@rating" @(roundedRate == rating ? "checked" : "") />
                        }
                    </div>
                    <a href="#reviews-container">Read reviews</a>
                </div>

                <p class="my-2 text-muted detail-product-descriptions">
                    @Html.Raw(Model.Description)
                </p>
            </div>
            <div class="d-flex justify-content-between ">
                <div class="align-items-end">
                    <small class="discountedPrice">$@Model.DiscountedPrice</small>
                    <p class="Price"><small>$</small>@Model.SalesPrice</p>
                </div>
                <button onclick="addToCart(@Model.Id)" class="align-self-end btn add-to-cart">
                    <span>Add to cart</span>
                    <i class="fa-solid fa-cart-arrow-down"></i>
                </button>

            </div>

        </div>
    </div>
</section>

<div class="container-lg mb-3">
    <div class="review-header row">
        <div class="col-12 col-md-6">
            <div class="col-12 d-flex justify-content-around align-items-center">
                <div>
                    <h4 class="">Reviews</h4>
                    <div class="text-muted">
                        <span>Based on @Model.Reviews.Count() @(Model.Reviews.Count() <= 1 ? "review" : "reviews")</span>
                    </div>
                </div>
                <div class="mb-2">
                    <div class="text-center h4"> @(Math.Round(Model.Rate(), 1))</div>
                    <div class="text-dark d-flex justify-content-start align-items-center">
                        <div class="smallrate d-inline-flex flex-nowrap align-items-start justify-content-start">
                            @{
                                guid = Guid.NewGuid();
                            }
                            @for (double rating = 5; rating >= 0.5; rating -= 0.5)
                            {
                                <input type="radio" disabled name="@guid" value="@rating" @(roundedRate == rating ? "checked" : "") />
                            }
                        </div>
                    </div>
                </div>
            </div>
            @for (int i = 5; i >= 1; i--)
            {
                int countWithRate = Model.Reviews.Count(x => x.Rate >= i && x.Rate < i + 1);
                int totalCount = Model.Reviews.Count();
                double percentage = totalCount > 0 && countWithRate > 0 ? 100 * countWithRate / totalCount : 0;
                <div class="row align-items-center justify-content-between flex-nowrap fs-14">

                    <div class="text-muted d-flex justify-content-end col-1 p-0">
                        <small>@i <i class="fas fa-star text-warning"></i></small>
                    </div>
                    <div class="col-10">
                        <div class="progress w-100 p-0">
                            <div class="progress-bar bg-warning" role="progressbar" style="width: @percentage%"
                                 aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100">
                            </div>
                        </div>
                    </div>
                    <div class="text-muted ms-1 col-1 p-0">
                        @percentage%
                    </div>
                </div>
            }
        </div>
        <div class="col-12 col-md-6 d-flex justify-content-end ">
            <img class="m-2 w-100"
                 src="https://cdn.shopify.com/s/files/1/0769/0373/files/reviews-banner_8dcea80a-a3c2-465b-83bd-bd2b94bd9d20.gif?v=1651869287"
                 alt="">
        </div>

    </div>
    <div id="reviews-container " class="review-content">
        <div class="d-flex align-items-end justify-content-between">
            <div class="d-flex">
                <div class="d-inline-flex sort-by-container">
                    <span>Rating:</span>

                    <select class="sort-by">
                        <option selected>All</option>
                        <option value="1">1 Star</option>
                        <option value="2">2 Star</option>
                        <option value="3">3 Star</option>
                        <option value="4">4 Star</option>
                        <option value="5">5 Star</option>
                    </select>
                </div>
                <p class="m-0">
            </div>
            <a class="btn btn-warning btn-write"> <i class="fa-solid fa-pencil"></i> Write a Review</a>
        </div>
        @foreach (var review in Model.Reviews)
        {
            guid = Guid.NewGuid();
            <div class="user-review">
                <div class=" d-flex justify-content-between">
                    <div class="fw-bold">@review.User.FirstName @review.User.LastName</div>
                    <div class="text-warning">
                        <div class="smallrate d-inline-flex flex-nowrap align-items-start justify-content-start">
                            @for (double rating = 5; rating >= 0.5; rating -= 0.5)
                            {
                                <input type="radio" disabled name="@guid" value="@rating" @(review.Rate == rating ? "checked" : "") />
                            }
                        </div>
                    </div>
                </div>
                <div class="text-muted my-2 ">
                    @review.Comment
                </div>
                <sub class="comment-time ">@review.Date.ToString("MMMM d, yyyy")</sub>
            </div>
        }
    </div>
</div>

