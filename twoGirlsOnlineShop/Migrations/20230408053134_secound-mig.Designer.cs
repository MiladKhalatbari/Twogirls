// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using twoGirlsOnlineShop.Data;

#nullable disable

namespace twoGirlsOnlineShop.Migrations
{
    [DbContext(typeof(TwogirsContext))]
    [Migration("20230408053134_secound-mig")]
    partial class secoundmig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BuildingNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsClose")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsClose = false,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.CardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ProductId");

                    b.ToTable("CardItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardId = 1,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            CardId = 1,
                            ProductId = 2,
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            CardId = 1,
                            ProductId = 3,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Name = "favorite"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Men's"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Women's"
                        },
                        new
                        {
                            Id = 3,
                            Name = "New Collection"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Designer Outlet"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fashion and Trends"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sports Glasses"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Best Sellers"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Most Visited"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fashion and Trends"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Glasses for Couples"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Discounted"
                        });
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.CategoryToProduct", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CategoryToProducts");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 9,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 10,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 12,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 9,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 10,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 11,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 5,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 7,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 6,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 8,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 12
                        });
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CVV2")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("CreditCardNumber")
                        .HasMaxLength(19)
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasMaxLength(2)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.ImagePath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("ImagePaths");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Url = "/image/sunglasses/v1.webp"
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 1,
                            Url = "/image/sunglasses/v2.webp"
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 2,
                            Url = "/image/sunglasses/a1.webp"
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 2,
                            Url = "/image/sunglasses/a2.webp"
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 3,
                            Url = "/image/sunglasses/b1.webp"
                        },
                        new
                        {
                            Id = 6,
                            ProductId = 3,
                            Url = "/image/sunglasses/b2.webp"
                        },
                        new
                        {
                            Id = 7,
                            ProductId = 4,
                            Url = "/image/sunglasses/c1.webp"
                        },
                        new
                        {
                            Id = 8,
                            ProductId = 4,
                            Url = "/image/sunglasses/c2.webp"
                        },
                        new
                        {
                            Id = 9,
                            ProductId = 5,
                            Url = "/image/sunglasses/e1.webp"
                        },
                        new
                        {
                            Id = 10,
                            ProductId = 5,
                            Url = "/image/sunglasses/e2.webp"
                        },
                        new
                        {
                            Id = 11,
                            ProductId = 6,
                            Url = "/image/sunglasses/f1.webp"
                        },
                        new
                        {
                            Id = 12,
                            ProductId = 6,
                            Url = "/image/sunglasses/f2.webp"
                        },
                        new
                        {
                            Id = 13,
                            ProductId = 7,
                            Url = "/image/sunglasses/g1.webp"
                        },
                        new
                        {
                            Id = 14,
                            ProductId = 7,
                            Url = "/image/sunglasses/g2.webp"
                        },
                        new
                        {
                            Id = 15,
                            ProductId = 8,
                            Url = "/image/sunglasses/s1.webp"
                        },
                        new
                        {
                            Id = 16,
                            ProductId = 8,
                            Url = "/image/sunglasses/s2.webp"
                        },
                        new
                        {
                            Id = 17,
                            ProductId = 9,
                            Url = "/image/sunglasses/h1.webp"
                        },
                        new
                        {
                            Id = 18,
                            ProductId = 9,
                            Url = "/image/sunglasses/h2.webp"
                        },
                        new
                        {
                            Id = 19,
                            ProductId = 10,
                            Url = "/image/sunglasses/w1.webp"
                        },
                        new
                        {
                            Id = 20,
                            ProductId = 10,
                            Url = "/image/sunglasses/w2.webp"
                        },
                        new
                        {
                            Id = 21,
                            ProductId = 11,
                            Url = "/image/sunglasses/r1.webp"
                        },
                        new
                        {
                            Id = 22,
                            ProductId = 11,
                            Url = "/image/sunglasses/r2.webp"
                        },
                        new
                        {
                            Id = 23,
                            ProductId = 12,
                            Url = "/image/sunglasses/q1.webp"
                        },
                        new
                        {
                            Id = 24,
                            ProductId = 12,
                            Url = "/image/sunglasses/q2.webp"
                        });
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountedPrice")
                        .HasMaxLength(64)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasMaxLength(64)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantityInStock")
                        .HasMaxLength(16)
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalesPrice")
                        .HasMaxLength(64)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            DiscountedPrice = 1227m,
                            PurchaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2454),
                            PurchasePrice = 1001m,
                            QuantityInStock = 35,
                            ReleaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2402),
                            SalesPrice = 1083m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            DiscountedPrice = 1408m,
                            PurchaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2462),
                            PurchasePrice = 1269m,
                            QuantityInStock = 50,
                            ReleaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2458),
                            SalesPrice = 1238m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            DiscountedPrice = 1402m,
                            PurchaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2469),
                            PurchasePrice = 1392m,
                            QuantityInStock = 17,
                            ReleaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2466),
                            SalesPrice = 1300m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            DiscountedPrice = 1428m,
                            PurchaseDate = new DateTime(2023, 4, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2476),
                            PurchasePrice = 1480m,
                            QuantityInStock = 44,
                            ReleaseDate = new DateTime(2023, 4, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2473),
                            SalesPrice = 1087m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            DiscountedPrice = 1078m,
                            PurchaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2484),
                            PurchasePrice = 1332m,
                            QuantityInStock = 36,
                            ReleaseDate = new DateTime(2023, 4, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2479),
                            SalesPrice = 1309m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            DiscountedPrice = 1244m,
                            PurchaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2490),
                            PurchasePrice = 1113m,
                            QuantityInStock = 41,
                            ReleaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2487),
                            SalesPrice = 1136m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            DiscountedPrice = 1251m,
                            PurchaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2501),
                            PurchasePrice = 1294m,
                            QuantityInStock = 31,
                            ReleaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2496),
                            SalesPrice = 1289m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            DiscountedPrice = 1011m,
                            PurchaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2509),
                            PurchasePrice = 1215m,
                            QuantityInStock = 22,
                            ReleaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2505),
                            SalesPrice = 1003m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            DiscountedPrice = 1238m,
                            PurchaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2518),
                            PurchasePrice = 1105m,
                            QuantityInStock = 33,
                            ReleaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2513),
                            SalesPrice = 1020m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            DiscountedPrice = 1256m,
                            PurchaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2525),
                            PurchasePrice = 1456m,
                            QuantityInStock = 23,
                            ReleaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2522),
                            SalesPrice = 1224m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            DiscountedPrice = 1031m,
                            PurchaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2534),
                            PurchasePrice = 1226m,
                            QuantityInStock = 43,
                            ReleaseDate = new DateTime(2023, 4, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2530),
                            SalesPrice = 1007m,
                            Title = "Reyban Genwux 941"
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            DiscountedPrice = 1314m,
                            PurchaseDate = new DateTime(2023, 3, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2540),
                            PurchasePrice = 1472m,
                            QuantityInStock = 21,
                            ReleaseDate = new DateTime(2023, 2, 8, 7, 31, 33, 851, DateTimeKind.Local).AddTicks(2537),
                            SalesPrice = 1008m,
                            Title = "Reyban Genwux 941"
                        });
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Review");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 1,
                            Rate = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 2,
                            Rate = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 5,
                            Rate = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 6,
                            Rate = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 2,
                            Rate = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Comment = "hamamash dagh bood nooshaba dadan porteghal zadan dan dadan !",
                            ProductId = 1,
                            Rate = 3,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmPassword = "123",
                            Email = "aqamiladam@gmail.com",
                            FirstName = "Milad",
                            IsAdmin = true,
                            Password = "123",
                            PhoneNumber = "+420730834642",
                            lastName = "Khalatbari"
                        },
                        new
                        {
                            Id = 2,
                            ConfirmPassword = "123",
                            Email = "samanafra@gmail.com",
                            FirstName = "saman",
                            IsAdmin = false,
                            Password = "123",
                            PhoneNumber = "+0985858585",
                            lastName = "afrasiabi"
                        });
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Address", b =>
                {
                    b.HasOne("twoGirlsOnlineShop.Models.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Card", b =>
                {
                    b.HasOne("twoGirlsOnlineShop.Models.User", "User")
                        .WithMany("Cards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.CardItem", b =>
                {
                    b.HasOne("twoGirlsOnlineShop.Models.Card", "Card")
                        .WithMany("CardItems")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("twoGirlsOnlineShop.Models.Product", "Product")
                        .WithMany("CardItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.CategoryToProduct", b =>
                {
                    b.HasOne("twoGirlsOnlineShop.Models.Category", "Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("twoGirlsOnlineShop.Models.Product", "Product")
                        .WithMany("categoryToProdycts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.CreditCard", b =>
                {
                    b.HasOne("twoGirlsOnlineShop.Models.User", "User")
                        .WithMany("CreditCards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.ImagePath", b =>
                {
                    b.HasOne("twoGirlsOnlineShop.Models.Product", "Product")
                        .WithMany("ImagePaths")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("twoGirlsOnlineShop.Models.User", "User")
                        .WithOne("ImagePath")
                        .HasForeignKey("twoGirlsOnlineShop.Models.ImagePath", "UserId");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Product", b =>
                {
                    b.HasOne("twoGirlsOnlineShop.Models.User", null)
                        .WithMany("Favorites")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Review", b =>
                {
                    b.HasOne("twoGirlsOnlineShop.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("twoGirlsOnlineShop.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Card", b =>
                {
                    b.Navigation("CardItems");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Category", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.Product", b =>
                {
                    b.Navigation("CardItems");

                    b.Navigation("ImagePaths");

                    b.Navigation("Reviews");

                    b.Navigation("categoryToProdycts");
                });

            modelBuilder.Entity("twoGirlsOnlineShop.Models.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Cards");

                    b.Navigation("CreditCards");

                    b.Navigation("Favorites");

                    b.Navigation("ImagePath");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
